CREATE SEQUENCE IF NOT EXISTS SQ_ACCOUNT_IDT;
CREATE SEQUENCE IF NOT EXISTS SQ_ACCOUNT_OPERATION_LOCK_IDT;

CREATE TABLE IF NOT EXISTS ACCOUNT (
	IDT_ACCOUNT BIGINT DEFAULT SQ_ACCOUNT_IDT.NEXTVAL,
	COD_ACCOUNT VARCHAR(32) NOT NULL,
	DAT_CREATION TIMESTAMP NOT NULL,
	NUM_LOCK BIGINT NOT NULL,

	NUM_NUMBER INT NOT NULL,
	NUM_AGENCY INT NOT NULL,

	FLG_BLOCKED_BALANCE BOOLEAN,
	DAT_LAST_BLOCK_UPDATE TIMESTAMP,

	NUM_BALANCE DOUBLE PRECISION,
    DAT_LAST_BALANCE_UPDATE TIMESTAMP,

    NUM_DAILY_DEBT_LIMIT DOUBLE PRECISION NOT NULL,
	NUM_DAILY_DEBTS_ACCUMULATOR DOUBLE PRECISION NOT NULL,
	PRIMARY KEY (IDT_ACCOUNT)
);

CREATE UNIQUE INDEX IF NOT EXISTS ACCOUNT_UK01 ON ACCOUNT (COD_ACCOUNT);

CREATE TABLE IF NOT EXISTS ACCOUNT_OPERATION_LOCK (
	IDT_ACCOUNT_OPERATION_LOCK BIGINT DEFAULT SQ_ACCOUNT_OPERATION_LOCK_IDT.NEXTVAL,
	COD_OPERATION VARCHAR(32),
	NUM_LOCK BIGINT NOT NULL,
	IDT_ACCOUNT BIGINT NOT NULL,
	PRIMARY KEY (IDT_ACCOUNT_OPERATION_LOCK)
);

CREATE UNIQUE INDEX IF NOT EXISTS ACCOUNT_OPERATION_LOCK_UK01 ON ACCOUNT_OPERATION_LOCK (COD_OPERATION, IDT_ACCOUNT);

--o primeiro campo do index composto vale como index tamb√©m porem preferi deixar mais explicito que essa coluna precisa de indice para busca
CREATE INDEX IF NOT EXISTS ACCOUNT_OPERATION_LOCK_IDX01 ON ACCOUNT_OPERATION_LOCK (COD_OPERATION);

CREATE UNIQUE INDEX IF NOT EXISTS ACCOUNT_OPERATION_LOCK_UK02 ON ACCOUNT_OPERATION_LOCK (IDT_ACCOUNT, NUM_LOCK);

ALTER TABLE ACCOUNT_OPERATION_LOCK ADD CONSTRAINT IF NOT EXISTS FK_ACCOUNT FOREIGN KEY (IDT_ACCOUNT) REFERENCES ACCOUNT(IDT_ACCOUNT);
