version: '2'
services:

  account-api:
    container_name: account-api
    image: sometestcases/itau-case-account-api:latest
    ports:
      - "11111:11111"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - kafka
      - kafkasetup
      - mocked-customer-service
      - schema-registry
    volumes:
      - type: bind
        source: ./var/tmp/
        target: /var/tmp/

  balance-manager-api:
    container_name: balance-manager-api
    image: sometestcases/itau-case-balance-manager-api:latest
    ports:
      - "11112:11112"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - kafka
      - kafkasetup
      - mocked-customer-service
      - schema-registry
    volumes:
      - type: bind
        source: ./var/tmp/
        target: /var/tmp/

  balance-manager-listener:
    container_name: balance-manager-listener
    image: sometestcases/itau-case-balance-manager-listener:latest
    ports:
      - "11113:11113"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - kafka
      - kafkasetup
      - mocked-customer-service
      - schema-registry
    volumes:
      - type: bind
        source: ./var/tmp/
        target: /var/tmp/

  internal-transfer-api:
    container_name: internal-transfer-api
    image: sometestcases/itau-case-internal-transfer-api:latest
    ports:
      - "11114:11114"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - kafka
      - kafkasetup
      - mocked-customer-service
      - schema-registry
    volumes:
      - type: bind
        source: ./var/tmp/
        target: /var/tmp/

  internal-transfer-listener:
    container_name: internal-transfer-listener
    image: sometestcases/itau-case-internal-transfer-listener:latest
    ports:
      - "11115:11115"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - kafka
      - kafkasetup
      - mocked-customer-service
      - schema-registry
    volumes:
      - type: bind
        source: ./var/tmp/
        target: /var/tmp/

  balance-search-api:
    container_name: balance-search-api
    image: sometestcases/itau-case-balance-search-api:latest
    ports:
      - "11116:11116"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - kafka
      - kafkasetup
      - mocked-customer-service
      - schema-registry
    volumes:
      - type: bind
        source: ./var/tmp/
        target: /var/tmp/

  balance-search-listener:
    container_name: balance-search-listener
    image: sometestcases/itau-case-balance-search-listener:latest
    ports:
      - "11117:11117"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - kafka
      - kafkasetup
      - mocked-customer-service
      - schema-registry
    volumes:
      - type: bind
        source: ./var/tmp/
        target: /var/tmp/

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:5.3.3
    ports:
      - "2081:2081"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2081
      - ZOOKEEPER_TICK_TIME=2000

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:5.3.3
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2081
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    depends_on:
      - zookeeper

  kafkasetup:
    image: confluentinc/cp-kafka:5.3.3
    depends_on:
      - kafka
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2081
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    restart: "no"
    entrypoint: [ "bash", "-c", "sleep 20 && kafka-topics --create --if-not-exists --replication-factor 1 --partitions 1 --topic account.creation --zookeeper zookeeper:2081 && kafka-topics --create --if-not-exists --replication-factor 1 --partitions 1 --topic balance.updated --zookeeper zookeeper:2081 && kafka-topics --create --if-not-exists --replication-factor 1 --partitions 1 --topic balance.atomic-operation --zookeeper zookeeper:2081"]

  schema-registry:
    container_name: schema-registry
    image: confluentinc/cp-schema-registry:5.3.3
    ports:
      - "8081:8081"
    environment:
      - SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL=zookeeper:2081
      - SCHEMA_REGISTRY_HOST_NAME=localhost
    depends_on:
      - zookeeper
      - kafka

  mocked-customer-service:
    image: mockserver/mockserver:latest
    ports:
      - 1080:1080
    environment:
      MOCKSERVER_WATCH_INITIALIZATION_JSON: "true"
      MOCKSERVER_SERVER_PORT: "1080"
      MOCKSERVER_INITIALIZATION_JSON_PATH: /mockServerConfig/customer-service.json
    volumes:
      - type: bind
        source: ./mockServerConfig
        target: /mockServerConfig

  mocked-bacen-service:
    image: mockserver/mockserver:latest
    ports:
      - 1081:1081
    environment:
      MOCKSERVER_WATCH_INITIALIZATION_JSON: "true"
      MOCKSERVER_SERVER_PORT: "1081"
      MOCKSERVER_INITIALIZATION_JSON_PATH: /mockServerConfig/bacen-service.json
    volumes:
      - type: bind
        source: ./mockServerConfig
        target: /mockServerConfig